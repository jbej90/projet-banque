<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http>
<!--	<custom-filter ref="myAuthenticationFilter" position="FORM_LOGIN_FILTER"/>-->
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/private/**" access="ROLE_USER" />

		<intercept-url pattern="/**" filters="none" />
		
		<form-login login-page="/login.htm" authentication-success-handler-ref="roleAuthenticationHandler" authentication-failure-handler-ref="failureLoginHandler" />
		<logout logout-success-url="/" />
		
<!--		<session-management>-->
<!--			<concurrency-control max-sessions="1" expired-url="/login.jsp" />-->
<!--		</session-management>-->
	</http>


	<authentication-manager>
		<!-- Connexion utilisateur -->
		<authentication-provider>
			<password-encoder hash="sha" />
			
			<jdbc-user-service id="auth" data-source-ref="dataSource" 
						users-by-username-query="SELECT login AS username, password, enabled FROM auth WHERE login = ?" 
						authorities-by-username-query="SELECT login AS username, 'USER' AS authority FROM auth WHERE login = ?" 
						role-prefix="ROLE_" />
		</authentication-provider>
		
		<!-- Connexion administrateur -->
		<authentication-provider>
			<password-encoder hash="sha" />
			
			<jdbc-user-service id="admin" data-source-ref="dataSource" 
						users-by-username-query="SELECT login AS username, password, enabled FROM admin WHERE login = ?" 
						authorities-by-username-query="SELECT login AS username, role AS authority FROM admin WHERE login = ?" 
						role-prefix="ROLE_" />
		</authentication-provider>
	</authentication-manager>
	

<!-- TODO : A dÃ©placer dans un projet "env" -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${datasource.classname}" />
		<beans:property name="url" value="${datasource.url}" />
		<beans:property name="username" value="${datasource.username}" />
		<beans:property name="password" value="${datasource.password}" />
	</beans:bean>
	
	<beans:bean id="roleAuthenticationHandler" class="com.excilys.projet.banque.web.handler.RoleAuthenticationSuccessHandler"></beans:bean>
	<beans:bean id="failureLoginHandler" class="com.excilys.projet.banque.web.handler.FailureLoginHandler"></beans:bean>
	
<!--	<beans:bean id="myAuthenticationFilter" class="com.excilys.projet.banque.web.CustomUsernamePasswordAuthenticationFilter"></beans:bean>-->

<!--	<beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">-->
<!--		<beans:property name="UsernameParameter" value="username"></beans:property>-->
<!--		<beans:property name="PasswordParameter" value="password"></beans:property>-->
<!--		<beans:property name="FilterProcessesUrl" value="/login.form"></beans:property>-->
<!--	</beans:bean>-->
</beans:beans>
